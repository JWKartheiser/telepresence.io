# This file should be placed in the folder for the version of the product that's meant to be documented. A `/release-notes` page will be automatically generated and populated at build time.
# Note that an entry needs to be added to the `doc-links.yml` file in order to surface the release notes in the table of contents.
#
# The YAML in this file should contain:
#
# changelog: An (optional) URL to the CHANGELOG for the product.
# items: An array of releases with the following attributes:
#     - version: The (optional) version number of the release, if applicable.
#     - date: The date of the release in the format YYYY-MM-DD.
#     - notes: An array of noteworthy changes included in the release, each having the following attributes:
#         - title: A short title of the noteworthy change.
#         - body: Two or three sentences describing the change and why it is noteworthy. This is in rich text format and may contain HTML elements.
#         - image: The URL of an image that visually represents the noteworthy change. This can be an absolute path or the name of the image file placed under the `ambassador-docs/public` folder starting with `./` (e.g., `./ambassador-example.png`).
#         - docs: The path to the documentation page where additional information can be found.
#         - type: The type of change, one of `bugfix`, `feature`, `security` or `change`.
#

changelog: https://github.com/telepresenceio/telepresence/blob/$branch$/CHANGELOG.md
items:
  - version: 2.3.0
    date: '2021-06-01'
    notes:
      - title: Brew install Telepresence
        body: "Telepresence can now be installed via brew on macOS, which makes it easier for users to stay up-to-date with the latest telepresence version. To install via brew, you can use the following command: <code>brew install datawire/blackbird/telepresence2</code>."
        image: ./telepresence-2.3.0-homebrew.png
        docs: install/index/
        type: feature
      - title: TCP and UDP routing via Virtual Network Interface
        body: "Telepresence will now perform routing of outbound TCP and UDP traffic via a Virtual Network Interface (VIF). The VIF is a layer 3 TUN-device that exists while Telepresence is connected. It makes the subnets in the cluster available to the workstation and will also route DNS requests to the cluster and forward them to intercepted pods. This means that pods with custom DNS configuration will work as expected. Prior versions of Telepresence would use firewall rules and were only capable of routing TCP."
        image: ./tunnel.jpg
        docs: reference/tun-device
        type: feature
      - title: SSH is no longer used
        body: "All traffic between the client and the cluster is now tunneled via the traffic manager gRPC API. This means that Telepresence no longer uses ssh tunnels and that the manager no longer have an <code>sshd</code> installed. Volume mounts are still established using <code>sshfs</code> but it is now configured to communicate using the sftp-protocol directly, which means that the traffic agent also runs without <code>sshd</code>. A desired side effect of this is that the manager and agent containers no longer need a special user configuration."
        image: ./no-ssh.png
        docs: reference/tun-device/#no-ssh-required
        type: change
      - title: Running in a Docker container
        body: "Telepresence can now be run inside a Docker container. This can be useful for avoiding side effects on a workstation's network, establishing multiple sessions with the traffic manager, or working with different clusters simultaneously."
        image: ./run-tp-in-docker.png
        docs: reference/inside-container
        type: feature
      - title: Configurable Log Levels
        body: "Telepresence now supports configuring the log level for Root Daemon and User Daemon logs. This provides control over the nature and volume of information that Telepresence generates in <code>daemon.log</code> and <code>connector.log</code>."
        image: ./telepresence-2.3.0-loglevels.png
        docs: reference/config/#log-levels
        type: feature
  - version: 2.2.2
    date: '2021-05-17'
    notes:
      - title: Legacy Telepresence subcommands
        body: Telepresence is now able to translate common legacy Telepresence commands into native Telepresence commands. So if you want to get started quickly, you can just use the same legacy Telepresence commands you are used to with the new Telepresence binary.
        image: ./telepresence-2.2.png
        docs: install/migrate-from-legacy/
        type: feature
